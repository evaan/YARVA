pub fn parse_r_type(instruction: &str, rd: u8, rs1: u8, rs2: u8) -> u32 {
  let (opcode, func3, func7): (u8, u8, u8) = match instruction {
    "add"    => (0b0110011, 0b000, 0b000000),
    "sub"    => (0b0110011, 0b000, 0b100000),
    "xor"    => (0b0110011, 0b100, 0b000000),
    "or"     => (0b0110011, 0b110, 0b000000),
    "and"    => (0b0110011, 0b111, 0b000000),
    "sll"    => (0b0110011, 0b001, 0b000000),
    "srl"    => (0b0110011, 0b101, 0b000000),
    "sra"    => (0b0110011, 0b101, 0b100000),
    "slt"    => (0b0110011, 0b010, 0b000000),
    "sltu"   => (0b0110011, 0b011, 0b000000),
    "mul"    => (0b0110011, 0b000, 0b000001),
    "mulh"   => (0b0110011, 0b001, 0b000001),
    "mulhsu" => (0b0110011, 0b010, 0b000001),
    "mulhu"  => (0b0110011, 0b011, 0b000001),
    "div"    => (0b0110011, 0b100, 0b000001),
    "divu"   => (0b0110011, 0b101, 0b000001),
    "rem"    => (0b0110011, 0b110, 0b000001),
    "remu"   => (0b0110011, 0b111, 0b000001),
    _ => unreachable!()
  };

  ((func7 as u32) << 25)
    | ((rs2 as u32) << 20)
    | ((rs1 as u32) << 15)
    | ((func3 as u32) << 12)
    | ((rd as u32) << 7)
    | (opcode as u32)
}
